;=======================================================================;
;									;
;            **********     ENGINE DE CUTSCENES	     *********		;
;									;
;=======================================================================;

; COMANDOS
;---------

.DEFINE	scene_stack	$D000

.ENUM $0000

; TODOS OS ARGUMENTOS SÃO 16 BITS

	cmd_dis_off	DB
	; desligar display

	cmd_dis_on	DB
	; ligar display

	cmd_ld_gfx	DB
	; carregar graficos
	; uso: cmd_ld_gfx, destino, endereço, tamanho

	cmd_ld_tmap	DB
	; carregar tilemaps
	; uso: cmd_ld_gfx, destino, endereço, tamanho yyxx

	cmd_fade_in	DB
	; fade in

	cmd_fade_out	DB
	; fade out

	cmd_timer	DB
	; timer
	; uso: timer,frames
	cmd_end		DB
.ENDE

.BANK 0 SLOT 0
.ORG	$0E66
.SECTION "SCENE_00_IN" OVERWRITE
	call	scene_00
.ENDS

.BANK 8 SLOT 0
.ORG	$0400
.SECTION "SCENE_ENGINE" SEMIFREE
scene_engine:
	ld	hl,$0000
	add	hl,sp
	push	hl
	pop	iy	;iy = stack point antigo
	ld	sp,ix	;stack pointer = local dos dados
	pop	af
	cp	cmd_dis_off
	jr	z,scene_dis_off
	cp	cmd_dis_on
	jr	z,scene_dis_on
	cp	cmd_ld_gfx
	jr	z,scene_ld_gfx
	cp	cmd_ld_tmap
	jr	z,scene_ld_tmap
	cp	cmd_fade_in
	jp	z,scene_fade_in
	cp	cmd_fade_out
	jp	z,scene_fade_out
	cp	cmd_timer
	jp	z,scene_timer
	ld	sp,iy
	ret

scene_dis_off:
	di
	ld	hl,$0000
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	ld	sp,iy	;restaurar stack pointer
	ld	a,%10100000
	out	($bf),a
	ld	a,$81
	out	($bf),a
	jr	scene_engine

scene_dis_on:
	ld	hl,$0000
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	ld	sp,iy	;restaurar stack pointer
	ld	a,%11100000
	out	($bf),a
	ld	a,$81
	out	($bf),a
	ei
	jr	scene_engine

scene_timer:	
	pop	bc
	ld	hl,$0000
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	ld	sp,iy	;restaurar stack pointer
-: 	dec	bc
	ld	a,b
	or	c
	jr	z,scene_engine
	halt
	jr	-

scene_ld_gfx:
	pop	de	; carregar argumentos
	pop	hl
	pop	bc
	push	hl
	ld	hl,$0002
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	pop	hl
	ld	sp,iy	; restaurar stack
	ld	a,$0F
	call	ld_gfx
	jp	scene_engine

scene_ld_tmap:
	pop	de	; carregar argumentos
	pop	hl
	pop	bc
	push	hl
	ld	hl,$0002
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	pop	hl
	ld	sp,iy	; restaurar stack
	call	ld_tmap
	jp	scene_engine

scene_fade_in:
	ld	hl,$0000
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	ld	sp,iy	; restaurar stack
	ld	c,$be
	ld	b,$04
	ld	hl,d_fade
	
	-:	push	bc
		ld	b,$08
		ld	a,(hl)
		inc	hl
		call	fade_timer
		call	ld_pal
		pop	bc
		djnz	-

	jp	scene_engine
	
scene_fade_out:
	ld	hl,$0000
	add	hl,sp
	push	hl
	pop	ix	;guardar pos cmds
	dec	ix
	ld	sp,iy	; restaurar stack
	ld	c,$be
	ld	b,$04
	ld	hl,d_fade+04h
	
	-:	push	bc
		ld	b,$08
		ld	a,(hl)
		dec	hl
		call	fade_timer
		call	ld_pal
		pop	bc
		djnz	-

	jp	scene_engine
	
ld_pal:
	ld	de,$c00f
	push	af
	rst	08h
	pop	af
	out	(c),a
	ret

fade_timer:
	ei
-:	halt
	djnz	-
	ret

d_fade:
	.DB	$00, $15, $2a, $3f
.ENDS

; TELA 199X
;----------
.BANK 0 SLOT 0
.ORG $0000

.SECTION "CMD"		FREE
cmd_199X:
.DB	cmd_dis_off

.DB	cmd_ld_gfx		;carregar gfx_199X na vram em $2820
.DW	$6820,gfx_199X,s_199X

.DB	cmd_ld_tmap		;carregar tmap_199X na vram em $7a92
.DW	$3A92,tmap_199X,$040e	;$040e = tamanho yyxx

.DB	cmd_dis_on

.DB	cmd_timer
.DW	$0020

.DB	cmd_fade_in		;fade in

.DB	cmd_timer
.DW	$0060

.DB	cmd_fade_out		;fade out

.DB	cmd_timer
.DW	$0060

.DB	cmd_end			;fim da cena
cmd_199X_end:
.ENDS

.ORG	$4000
.SECTION "SCENE_00"	SEMIFREE
scene_00:		
	call	clr_psg
	call	clr_tilemap	; limpar tilemap
	ld	de,scene_stack
	ld	hl,cmd_199X
	ld	bc,cmd_199X_end-cmd_199X
	ldir
	ld	a,$08
	ld	($FFFD),a
	ld	ix,scene_stack-1
	call	scene_engine

scene_00_out:
	ld	a,$0
	ld	($FFFD),a
	ld	a,($d992)
	ret

.ENDS

.BANK 8 SLOT 0
.ORG	$165D
	ret
